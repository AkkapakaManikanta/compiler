structure IR : sig

  type inst = (string, Temp.temp) MIPS.inst
  type stmt = (string, Temp.temp) MIPS.stmt
  type prog = stmt list
  
  val ppInst : inst -> string
  val ppStmt : stmt -> string
  val pp     : prog -> string
  val translatetomips : TigerAst.Inst list -> (string,MIPS.reg) MIPS.stmt list
  
end = struct

  (* complete this *)
  exception AlltheRegistersareOver 
  type inst = (string, Temp.temp) MIPS.inst
  type stmt = (string, Temp.temp) MIPS.stmt
  type prog = stmt list

  fun ppInst x = MIPS.mapI Temp.tempToString x
  fun ppStmt x = MIPS.mapS Temp.tempToString x
  fun pp (x :: xs) = ppStmt x ^ pp xs
    | pp _ = "\n"
   
  fun tempToReg x          = case (Temp.tempToString x) of
                                      "0" => MIPS.v0
                                    | "1" => MIPS.a0
                                    | "2" => MIPS.zero
                                    | "3" => MIPS.at
                                    | "4" => MIPS.v1
                                    | "5" => MIPS.a1
                                    | "6" => MIPS.a2
                                    | "7" => MIPS.a3
                                    | "8" => MIPS.t0
                                    | "9" => MIPS.t1
                                    | "10" => MIPS.t2
                                    | "11" => MIPS.t3
                                    | "12" => MIPS.t4
                                    | "13" => MIPS.t5
                                    | "14" => MIPS.t6
                                    | "15" => MIPS.t7
                                    | "16" => MIPS.s0
                                    | "17" => MIPS.s1
                                    | "18" => MIPS.s2
                                    | "19" => MIPS.s3
                                    | "20" => MIPS.s4
                                    | "21" => MIPS.s5
                                    | "22" => MIPS.s6
                                    | "23" => MIPS.s7
                                    | "24" => MIPS.t8
                                    | "25" => MIPS.t9
                                    | "26" => MIPS.k0
                                    | "27" => MIPS.k1
                                    | "28" => MIPS.gp
                                    | "29" => MIPS.sp
                                    | "30" => MIPS.fp
                                    | "31" => MIPS.ra
                                    | "32" => MIPS.f0
                                    | "33" => MIPS.f1
                                    | "34" => MIPS.f2
                                    | "35" => MIPS.f3
                                    | "36" => MIPS.f4
                                    | "37" => MIPS.f5
                                    | "38" => MIPS.f6
                                    | "39" => MIPS.f7
                                    | "40" => MIPS.f8
                                    | "41" => MIPS.f9
                                    | "42" => MIPS.f10
                                    | "43" => MIPS.f11
                                    | "44" => MIPS.f12
                                    | "45" => MIPS.f13
                                    | "46" => MIPS.f14
                                    | "47" => MIPS.f15
                                    | "48" => MIPS.f16
                                    | "49" => MIPS.f17
                                    | "50" => MIPS.f18
                                    | "51" => MIPS.f19
                                    | "52" => MIPS.f20
                                    | "53" => MIPS.f21
                                    | "54" => MIPS.f22
                                    | "55" => MIPS.f23
                                    | "56" => MIPS.f24
                                    | "57" => MIPS.f25
                                    | "58" => MIPS.f26
                                    | "59" => MIPS.f27
                                    | "60" => MIPS.f28
                                    | "61" => MIPS.f29
                                    | "62" => MIPS.f30
                                    | "63" => MIPS.f31
                                    |  _   => raise AlltheRegistersareOver
  
				
 fun mipstempToReg (MIPS.abs(a,b))   = MIPS.abs(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.add(a,b,c)) = MIPS.add(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.addi(a,b,c)) = MIPS.addi(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.addu(a,b,c)) = MIPS.addu(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.addui(a,b,c)) = MIPS.addui(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.AND(a,b,c)) = MIPS.AND(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.andi(a,b,c)) = MIPS.andi(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.DIV(a,b)) = MIPS.DIV(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.DIVU(a,b)) = MIPS.DIVU(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.Div(a,b,c)) = MIPS.Div(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.Divu(a,b,c)) = MIPS.Divu(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.mul(a,b,c)) = MIPS.mul(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.mulo(a,b,c)) = MIPS.mulo(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.mulou(a,b,c)) = MIPS.mulou(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.mult(a,b)) = MIPS.mult(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.multu(a,b)) = MIPS.multu(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.neg(a,b)) = MIPS.neg(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.negu(a,b)) = MIPS.negu(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.nor(a,b,c)) = MIPS.nor(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.not(a,b)) = MIPS.not(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.or(a,b,c)) = MIPS.or(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.ori(a,b,c)) = MIPS.ori(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.rem(a,b,c)) = MIPS.rem(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.remu(a,b,c)) = MIPS.remu(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.rol(a,b,c)) = MIPS.rol(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.ror(a,b,c)) = MIPS.ror(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sll(a,b,c)) = MIPS.sll(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sllv(a,b,c)) = MIPS.sllv(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sra(a,b,c)) = MIPS.sra(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.srav(a,b,c)) = MIPS.srav(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.srl(a,b,c)) = MIPS.srl(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.srlv(a,b,c)) = MIPS.srlv(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sub(a,b,c)) = MIPS.sub(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.subu(a,b,c)) = MIPS.subu(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.xor(a,b,c)) = MIPS.xor(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.xori(a,b,c)) = MIPS.xori(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.li(a,b)) = MIPS.li(tempToReg a,b) 
   | mipstempToReg (MIPS.lui(a,b)) = MIPS.lui(tempToReg a,b) 
   | mipstempToReg (MIPS.seq(a,b,c)) = MIPS.seq(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sge(a,b,c)) = MIPS.sge(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sgeu(a,b,c)) = MIPS.sgeu(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sgt(a,b,c)) = MIPS.sgt(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sgtu(a,b,c)) = MIPS.sgtu(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sle(a,b,c)) = MIPS.sle(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sleu(a,b,c)) = MIPS.sleu(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.slt(a,b,c)) = MIPS.slt(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.slti(a,b,c)) = MIPS.slti(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.sltu(a,b,c)) = MIPS.sltu(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sltiu(a,b,c)) = MIPS.sltiu(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.sne(a,b,c)) = MIPS.sne(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.B(a)) = MIPS.B(a)
   | mipstempToReg (MIPS.bczt(a)) = MIPS.bczt(a) 
   | mipstempToReg (MIPS.bczf(a)) = MIPS.bczf(a) 
   | mipstempToReg (MIPS.beq(a,b,c)) = MIPS.beq(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.beqz(a,b)) = MIPS.beqz(tempToReg a,b) 
   | mipstempToReg (MIPS.bge(a,b,c)) = MIPS.bge(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.bgeu(a,b,c)) = MIPS.bgeu(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.bgez(a,b)) = MIPS.bgez(tempToReg a,b) 
   | mipstempToReg (MIPS.bgezal(a,b)) = MIPS.bgezal(tempToReg a,b) 
   | mipstempToReg (MIPS.bgt(a,b,c)) = MIPS.bgt(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.bgtu(a,b,c)) = MIPS.bgtu(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.bgtz(a,b)) = MIPS.bgtz(tempToReg a, b)
   | mipstempToReg (MIPS.ble(a,b,c)) = MIPS.ble(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.bleu(a,b,c)) = MIPS.bleu(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.blez(a,b)) = MIPS.blez(tempToReg a, b)
   | mipstempToReg (MIPS.Bgezal(a,b)) = MIPS.bgezal(tempToReg a, b) 
   | mipstempToReg (MIPS.bltzal(a,b)) = MIPS.bltzal(tempToReg a, b) 
   | mipstempToReg (MIPS.blt(a,b,c)) = MIPS.blt(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.bltu(a,b,c)) = MIPS.bltu(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.bltz(a,b)) = MIPS.bltz(tempToReg a,b) 
   | mipstempToReg (MIPS.bne(a,b,c)) = MIPS.bne(tempToReg a, tempToReg b, c)
   | mipstempToReg (MIPS.bnez(a,b)) = MIPS.bnez(tempToReg a,b) 
   | mipstempToReg (MIPS.j(a)) = MIPS.j(a) 
   | mipstempToReg (MIPS.jal(a)) = MIPS.jal(a) 
   | mipstempToReg (MIPS.jalr(a)) = MIPS.jalr(tempToReg a)
   | mipstempToReg (MIPS.jr(a)) = MIPS.jr(tempToReg a)
   | mipstempToReg (MIPS.la(a,b)) = MIPS.la(tempToReg a,b) 
   | mipstempToReg (MIPS.lb(a,b)) = MIPS.lb(tempToReg a,b) 
   | mipstempToReg (MIPS.lbu(a,b)) = MIPS.lbu(tempToReg a,b) 
   | mipstempToReg (MIPS.ld(a,b)) = MIPS.ld(tempToReg a,b) 
   | mipstempToReg (MIPS.lh(a,b)) = MIPS.lh(tempToReg a,b) 
   | mipstempToReg (MIPS.lhu(a,b)) = MIPS.lhu(tempToReg a,b) 
   | mipstempToReg (MIPS.lw(a,b)) = MIPS.lw(tempToReg a,b) 
   | mipstempToReg (MIPS.lwcz(a,b)) = MIPS.lwcz(tempToReg a,b) 
   | mipstempToReg (MIPS.lwl(a,b)) = MIPS.lwl(tempToReg a,b) 
   | mipstempToReg (MIPS.lwr(a,b)) = MIPS.lwr(tempToReg a,b) 
   | mipstempToReg (MIPS.ulh(a,b)) = MIPS.ulh(tempToReg a,b) 
   | mipstempToReg (MIPS.ulhu(a,b)) = MIPS.ulhu(tempToReg a,b) 
   | mipstempToReg (MIPS.ulw(a,b)) = MIPS.ulw(tempToReg a,b) 
   | mipstempToReg (MIPS.sb(a,b)) = MIPS.sb(tempToReg a,b) 
   | mipstempToReg (MIPS.sd(a,b)) = MIPS.sd(tempToReg a,b) 
   | mipstempToReg (MIPS.sh(a,b)) = MIPS.sh(tempToReg a,b) 
   | mipstempToReg (MIPS.sw(a,b)) = MIPS.sw(tempToReg a,b) 
   | mipstempToReg (MIPS.swcz(a,b)) = MIPS.swcz(tempToReg a,b) 
   | mipstempToReg (MIPS.swl(a,b)) = MIPS.swl (tempToReg a,b) 
   | mipstempToReg (MIPS.swr(a,b)) = MIPS.swr(tempToReg a,b) 
   | mipstempToReg (MIPS.ush(a,b)) = MIPS.ush(tempToReg a,b) 
   | mipstempToReg (MIPS.usw(a,b)) = MIPS.usw(tempToReg a,b) 
   | mipstempToReg (MIPS.move(a,b)) = MIPS.move(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.mfhi(a)) = MIPS.mfhi(tempToReg a)
   | mipstempToReg (MIPS.mflo(a)) = MIPS.mflo(tempToReg a)
   | mipstempToReg (MIPS.mthi(a)) = MIPS.mthi(tempToReg a)
   | mipstempToReg (MIPS.mtlo(a)) = MIPS.mtlo(tempToReg a)
   | mipstempToReg (MIPS.mfcz(a,b)) = MIPS.mfcz(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.mfc1_d(a,b)) = MIPS.mfc1_d(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.mtcz(a,b)) = MIPS.mtcz(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.rfe) = MIPS.rfe
   | mipstempToReg (MIPS.syscall) = MIPS.syscall
   | mipstempToReg (MIPS.break(a)) = MIPS.break(a)
   | mipstempToReg (MIPS.nop) = MIPS.nop
   | mipstempToReg (MIPS.abs_d(a,b)) = MIPS.abs_d(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.abs_s(a,b)) = MIPS.abs_s(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.add_d(a,b,c)) = MIPS.add_d(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.add_s(a,b,c)) = MIPS.add_s(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.c_eq_d(a,b)) = MIPS.c_eq_d(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.c_eq_s(a,b)) = MIPS.c_eq_s(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.c_le_d(a,b)) = MIPS.c_le_d(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.c_le_s(a,b)) = MIPS.c_le_s(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.c_lt_d(a,b)) = MIPS.c_lt_d(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.c_lt_s(a,b)) = MIPS.c_lt_s(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.cvt_d_s(a,b)) = MIPS.cvt_d_s(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.cvt_d_w(a,b)) = MIPS.cvt_d_w(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.cvt_s_d(a,b)) = MIPS.cvt_s_d(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.cvt_s_w(a,b)) = MIPS.cvt_s_w(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.cvt_w_d(a,b)) = MIPS.cvt_w_d(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.cvt_w_s(a,b)) = MIPS.cvt_w_s(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.div_d(a,b,c)) = MIPS.div_d(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.div_s(a,b,c)) = MIPS.div_s(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.l_d(a,b)) = MIPS.l_d(tempToReg a,b) 
   | mipstempToReg (MIPS.l_s(a,b)) = MIPS.l_s(tempToReg a,b) 
   | mipstempToReg (MIPS.mov_d(a,b)) = MIPS.mov_d(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.mov_s(a,b)) = MIPS.mov_s(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.mul_d(a,b,c)) = MIPS.mul_d(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.mul_s(a,b,c)) = MIPS.mul_s(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.neg_d(a,b)) = MIPS.neg_d(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.neg_s(a,b)) = MIPS.neg_s(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.s_d(a,b)) = MIPS.s_d(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.s_s(a,b)) = MIPS.s_s(tempToReg a, tempToReg b)
   | mipstempToReg (MIPS.sub_d(a,b,c)) = MIPS.sub_d(tempToReg a, tempToReg b, tempToReg c)
   | mipstempToReg (MIPS.sub_s(a,b,c)) = MIPS.sub_s(tempToReg a, tempToReg b, tempToReg c)
   
   
   fun stmtcheck (MIPS.Inst x)     = MIPS.Inst (mipstempToReg x) 
     | stmtcheck (MIPS.ascii x)    = MIPS.ascii x
     | stmtcheck (MIPS.asciiz x)   = MIPS.asciiz x
     | stmtcheck (MIPS.data x)     = MIPS.data x
     | stmtcheck (MIPS.text x)     = MIPS.text x
     | stmtcheck (MIPS.word x)     = MIPS.word x
     | stmtcheck (MIPS.byte x)     = MIPS.byte x
     | stmtcheck (MIPS.float x)    = MIPS.float x
     | stmtcheck (MIPS.double x)   = MIPS.double x
     | stmtcheck (MIPS.extern x)   = MIPS.extern x
     | stmtcheck (MIPS.globl x)    = MIPS.globl x
     | stmtcheck (MIPS.half x)     = MIPS.half x
     | stmtcheck (MIPS.kdata x)    = MIPS.kdata x
     | stmtcheck (MIPS.ktext x)    = MIPS.ktext x
     | stmtcheck (MIPS.space x)    = MIPS.space x
     | stmtcheck (MIPS.align x)    = MIPS.align x
     | stmtcheck (MIPS.ptext )     = MIPS.ptext
     | stmtcheck (MIPS.pdata )     = MIPS.pdata
     | stmtcheck (MIPS.Label x)    = MIPS.Label x

    fun irTomips (x::xs) = (stmtcheck x) :: (irTomips xs)
      | irTomips _       = []

    fun translatetomips x = irTomips (Translate.transprog (AtomMap.empty) x)
 
 
end

